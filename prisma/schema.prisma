// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Product {
    id          String  @id @default(cuid())
    name        String
    description String? @db.Text
    price       Float
    sku         String?
    active      Boolean @default(false)
    inStock     Int?

    seoId String?

    Variants Variant[]
    Media    Media[]
    SEO      SEO?      @relation(fields: [seoId], references: [id])

    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())

    @@index([seoId])
}

model Variant {
    id          String  @id @default(cuid())
    description String  @db.Text
    price       Float
    sku         String?
    inStock     Int?

    productId       String
    variantGroupId  String
    variantOptionId String

    VariantGroup  VariantGroup  @relation(fields: [variantGroupId], references: [id])
    VariantOption VariantOption @relation(fields: [variantOptionId], references: [id])
    Product       Product       @relation(fields: [productId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([variantGroupId])
    @@index([productId])
    @@index([variantOptionId])
}

model Media {
    id String @id @default(cuid())

    image   Image   @relation(fields: [imageId], references: [id])
    Product Product @relation(fields: [productId], references: [id])

    imageId   String
    productId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([productId])
    @@index([imageId])
}

model Image {
    id  String  @id @default(cuid())
    url String? // the url should be inserted after the upload

    userId String // the user who uploaded the image

    Media Media[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VariantGroup {
    id   String @id @default(cuid())
    name String

    VariantOption VariantOption[]
    Variant       Variant[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VariantOption {
    id   String @id @default(cuid())
    name String

    variantGroupId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    VariantGroup VariantGroup @relation(fields: [variantGroupId], references: [id])
    Variant      Variant[]

    @@index([variantGroupId])
}

model SEO {
    id              String @id @default(cuid())
    customPermalink String @db.Text
    title           String
    description     String @db.Text

    Product Product[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model AdminUsers {
    id    String @id @default(cuid())
    email String @unique
    name  String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
